#DriverCode

import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while (t-- > 0) {
            int r = sc.nextInt();
            int c = sc.nextInt();

            int matrix[][] = new int[r][c];

            for (int i = 0; i < r; i++) {
                for (int j = 0; j < c; j++) matrix[i][j] = sc.nextInt();
            }
            Solution ob = new Solution();
            ArrayList<Integer> ans = ob.spirallyTraverse(matrix);
            for (Integer val : ans) System.out.print(val + " ");
            System.out.println();
        }
    }
}


#OurSolution

class Solution {
    public ArrayList<Integer> spirallyTraverse(int matrix[][]) {
        ArrayList<Integer> arr = new ArrayList<>();
        if(matrix.length == 0) {
            return arr;
        }
        
        int top = 0, left = 0;
        int down = matrix.length - 1;
        int right = matrix[0].length - 1;
        
        while(top <= down && left <= right) {
            // Traverse from left to right
            for(int i = left; i <= right; i++) {
                arr.add(matrix[top][i]);
            }
            top++;
            
            // Traverse from top to bottom
            for(int i = top; i <= down; i++) {
                arr.add(matrix[i][right]);
            }
            right--;
            
            if(top <= down) {
                // Traverse from right to left
                for(int i = right; i >= left; i--) {
                    arr.add(matrix[down][i]);
                }
                down--;
            }
            
            if(left <= right) {
                // Traverse from bottom to top
                for(int i = down; i >= top; i--) {
                    arr.add(matrix[i][left]);
                }
                left++;
            }
        }
        
        return arr;
    }
}
